import os

from tqdm import tqdm
import json 
import csv

from functions import get_files



def json2csv(path="PedestrianDetection", save_filename="out"):
    # CustomVision downloaded annotations to TFLite Model Maker annotations
    # path=full path because get_files will append the path provided as the root
    with open(os.path.join(path, "allTags.json")) as f:
        tags = json.load(f)

    split_dist = {tag: {"TRAINING":   [0, .7],
                        "VALIDATION": [0, .2],
                        "TEST":       [0, .1]} for tag in tags}


    data = []
    annotations = [file for file in get_files(path, ext=(".json"))]

    for file in tqdm(annotations):
        ''' expected annotations:
            TRAINING|VALIDATION|TEST, file_path, label, left (x1), top (y1),,, right (x2), bottom (y2),,  
            for each OBJECT, not each image
        '''
        if "allTags" in file:
            continue

        with open(file) as f:
            annotation = json.load(f)
        
        img_path = "/PedestrianDetection/" + file.split('\\')[1].split('.')[0] + ".jpg" # file is the json one


        for sample in annotation["regions"]:
            class_name = sample["tag_name"]
            left, top = sample["left"], sample["top"], 
            right, bottom = left+sample["width"], top+sample["height"]
            class_dist = {k:v[0]/v[1] for k,v in split_dist[class_name].items()}
            split = min(class_dist, key=class_dist.get)

            split_dist[class_name][split][0] += 1

            data.append([split, img_path, class_name, left, top, '', '', right, bottom, '', ''])
    
    with open(f"out/{save_filename}.csv", "w", newline='') as f:
        wr = csv.writer(f, delimiter=",")
        wr.writerows(data)


def add_model_metadata(
    model_path=r"D:\path\to\model.tflite", 
    lbl_path=r"D:\path\to\labels.txt",
    save_path="VehicleDetector_metadata.tflite"):
    
    from tflite_support.metadata_writers import object_detector
    from tflite_support.metadata_writers import writer_utils

    ObjectDetectorWriter = object_detector.MetadataWriter

    _INPUT_NORM_MEAN = 0
    _INPUT_NORM_STD = 1

    # Create the metadata writer.
    writer = ObjectDetectorWriter.create_for_inference(
        writer_utils.load_file(model_path), [_INPUT_NORM_MEAN], [_INPUT_NORM_STD],
        [lbl_path])

    # Verify the metadata generated by metadata writer.
    print(writer.get_metadata_json())

    # Populate the metadata into the model.
    writer_utils.save_file(writer.populate(), save_path)






if __name__ == "__main__":
    json2csv(save_filename="PedestrianDetectionAnnotation_split")

